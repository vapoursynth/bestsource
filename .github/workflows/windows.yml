name: Windows

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: msys2/setup-msys2@v2
      with:
        msystem: CLANG64
        update: true
        install: >-
          autoconf
          automake
          base-devel
          git
          libtool
          mingw-w64-clang-x86_64-cmake
          mingw-w64-clang-x86_64-dav1d
          mingw-w64-clang-x86_64-lcms2
          mingw-w64-clang-x86_64-libjxl
          mingw-w64-clang-x86_64-libxml2
          mingw-w64-clang-x86_64-meson
          mingw-w64-clang-x86_64-nasm
          mingw-w64-clang-x86_64-opus
          mingw-w64-clang-x86_64-toolchain
          mingw-w64-clang-x86_64-vapoursynth
          mingw-w64-clang-x86_64-vulkan-headers
          mingw-w64-clang-x86_64-xxhash

    - name: Install davs2
      run: |
        git clone https://github.com/pkuvcl/davs2.git --depth 1
        pushd davs2/build/linux
        CC=clang++ ./configure --prefix=/clang64 --disable-cli
        make install -j$(nproc)
        popd
        rm -rf davs2

    - name: Install nv-codec-headers
      run: |
        git clone https://github.com/FFmpeg/nv-codec-headers.git --depth 1
        pushd nv-codec-headers
        make install -j$(nproc) PREFIX=/clang64
        popd
        rm -rf nv-codec-headers

    - name: Install uavs3d
      run: |
        git clone https://github.com/uavs3/uavs3d.git --depth 1
        pushd uavs3d
        cmake -S . -B build -DCMAKE_POLICY_VERSION_MINIMUM=3.20 -DCOMPILE_10BIT=1 --install-prefix /clang64
        ninja -C build install
        popd
        rm -rf uavs3d

    - name: Install XEVD
      run: |
        git clone https://github.com/mpeg5/xevd.git
        pushd xevd
        cmake -S . -B build --install-prefix /clang64
        ninja -C build install
        popd
        rm -rf xevd
        mv /clang64/lib/xevd/libxevd.a /clang64/lib

    - name: Install FFmpeg
      run: |
        git clone https://git.ffmpeg.org/ffmpeg.git --depth 1
        pushd ffmpeg
        ./configure --prefix=/clang64 --enable-gpl --enable-version3 --disable-programs --disable-doc --disable-avdevice --disable-swresample --disable-swscale --disable-avfilter --disable-encoders --disable-muxers --enable-lcms2 --enable-libdav1d --enable-libdavs2 --enable-libjxl --enable-libopus --enable-libuavs3d --enable-libxevd --enable-libxml2 --disable-nvenc --cc=clang --cxx=clang++ --pkg-config-flags=--static --disable-debug
        make install -j$(nproc)
        popd
        rm -rf ffmpeg

    - name: Build
      run: |
        meson setup -Ddefault_library=static -Dprefer_static=true -Db_lto=true -Dcpp_link_args=-static build
        ninja -C build
        strip build/bestsource.dll

    - uses: actions/upload-artifact@v4
      with:
        name: bestsource
        path: build/bestsource.dll
